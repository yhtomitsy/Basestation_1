// rx_global_ctrl_beh.v generated by Lattice IP Model Creator version 1
// created on Wed, Jan 10, 2018  4:27:44 PM
// Copyright(c) 2007 Lattice Semiconductor Corporation. All rights reserved
// obfuscator_exe version 1.mar0807

// top





































                
`timescale 1 ns / 100 ps
module mgb9cfe 
 (
     input  wire       reset_n_i,
     input  wire       tu73f89,

     input wire         wl9fc4a,  
     input wire         lqfe255,  
     output wire        rgf12ab,  
     output wire        fc8955a,    
     output wire [1:0]  vv4aad2      );
parameter [1:0]  th55696 = 3'd0,  kfab4b7 = 3'd1,  zx5a5bc = 3'd2,  hbd2de6 = 3'd3;
reg [1:0] ri96f37, twb79bb;
reg       ukbcdda, nre6ed1;
reg       xl3768f, gdbb47f, dmda3fd, kqd1fea;
reg mt8ff50;
reg yx7fa84;
reg [1 : 0] offd424;
reg [1 : 0] kqea124;
reg zx50920;
reg db84906;
reg co24837;
reg gq241b8;
reg ri20dc1;
reg zz6e0a;
reg [2047:0] vx37056;
wire [9:0] pub82b7;

localparam suc15ba = 10,ouadd0 = 32'hfdffc68b;
localparam [31:0] me56e80 = ouadd0;
localparam tjba00b = ouadd0 & 4'hf;
localparam [11:0] mt802fb = 'h7ff;
wire [(1 << tjba00b) -1:0] xybee2;
reg [suc15ba-1:0] hofb896;
reg [tjba00b-1:0] ene2595 [0:1];
reg [tjba00b-1:0] xy96565;
reg lsb2b2a;
integer kf95952;
integer ksaca94;

 always @(posedge tu73f89 or negedge reset_n_i)  begin   if (~reset_n_i) begin     xl3768f <= 0;     gdbb47f    <= 0;     dmda3fd    <= 0;     kqd1fea    <= 0;   end   else begin     xl3768f <= ~mt8ff50 & (~yx7fa84);     gdbb47f    <= mt8ff50 & yx7fa84;     dmda3fd    <= ~mt8ff50 & yx7fa84;     kqd1fea    <= ~mt8ff50 & (~yx7fa84);   end
end

 assign    fc8955a = zx50920; assign    rgf12ab = zx50920 | ((offd424 == zx5a5bc) & co24837); assign    vv4aad2 = offd424; always @(*) begin     case (offd424) th55696 :     begin                nre6ed1 = 0;                if (gq241b8)                    twb79bb = kfab4b7;                else                    twb79bb = th55696;            end        kfab4b7 :            begin                nre6ed1 = 0;                if (ri20dc1)                    twb79bb = zx5a5bc;                                                else                    twb79bb = kfab4b7;            end        zx5a5bc :            begin                if (zz6e0a)                begin                    nre6ed1 = 1;                    twb79bb = hbd2de6;                end                else if (gq241b8)                begin                    nre6ed1 = 0;                    twb79bb = kfab4b7;                end                                                                                                else                begin                    nre6ed1 = 0;                    twb79bb = zx5a5bc;                end            end        hbd2de6 :            begin              if (gq241b8)                begin                    nre6ed1 = 0;                    twb79bb = th55696;                end                else                begin                    nre6ed1 = 1;                    twb79bb = hbd2de6;                end            end    endcase
end
always @(posedge tu73f89 or negedge reset_n_i)
begin    if (~reset_n_i)    begin        ri96f37 <= 0;        ukbcdda <= 0;    end    else    begin        ri96f37 <= kqea124;        ukbcdda <= db84906;    end
end

always@* begin mt8ff50<=pub82b7[0];yx7fa84<=pub82b7[1];offd424<={ri96f37>>1,pub82b7[2]};kqea124<={twb79bb>>1,pub82b7[3]};zx50920<=pub82b7[4];db84906<=pub82b7[5];co24837<=pub82b7[6];gq241b8<=pub82b7[7];ri20dc1<=pub82b7[8];zz6e0a<=pub82b7[9];end
always@* begin vx37056[2047]<=lqfe255;vx37056[2046]<=ri96f37[0];vx37056[2044]<=twb79bb[0];vx37056[2040]<=ukbcdda;vx37056[2032]<=nre6ed1;vx37056[2017]<=xl3768f;vx37056[1987]<=gdbb47f;vx37056[1926]<=dmda3fd;vx37056[1805]<=kqd1fea;vx37056[1023]<=wl9fc4a;end         assign xybee2 = vx37056,pub82b7 = hofb896; initial begin kf95952 = $fopen(".fred"); $fdisplay( kf95952, "%3h\n%3h", (me56e80 >> 4) & mt802fb, (me56e80 >> (tjba00b+4)) & mt802fb ); $fclose(kf95952); $readmemh(".fred", ene2595); end always @ (xybee2) begin xy96565 = ene2595[1]; for (ksaca94=0; ksaca94<suc15ba; ksaca94=ksaca94+1) begin hofb896[ksaca94] = xybee2[xy96565]; lsb2b2a = ^(xy96565 & ene2595[0]); xy96565 = {xy96565, lsb2b2a}; end end 
endmodule





















































`timescale 1 ns / 100 ps
module rx_global_ctrl #(
    parameter NUM_RX_LANE = 4,    parameter RX_GEAR = 16,    parameter RX_FIFO = "OFF",    parameter RX_CLK_MODE = "HS_LP"
)
(
    input  wire              reset_n_i,
    input  wire              reset_lp_n_i,
    input  wire              reset_byte_fr_n_i,
    input  wire               clk_lp_ctrl_i,
    input  wire              clk_byte_hs_i,      
    input  wire              clk_byte_i,
    input  wire              clk_byte_fr_i,
    input  wire              pll_lock_i,         

    input wire [RX_GEAR-1:0]  bd0_i,
    input wire [RX_GEAR-1:0]  bd1_i,
    input wire [RX_GEAR-1:0]  bd2_i,
    input wire [RX_GEAR-1:0]  bd3_i,
    input wire                lp_clk_p_i,         
    input wire                lp_clk_n_i,         
    input wire                lp_d0_p_i,          
    input wire                lp_d0_n_i,          
    input wire                lp_d1_p_i,          
    input wire                lp_d1_n_i,          
    input wire                lp_d2_p_i,          
    input wire                lp_d2_n_i,          
    input wire                lp_d3_p_i,          
    input wire                lp_d3_n_i,          
    input wire                hs_sync_i,          
    output wire [RX_GEAR-1:0] bd0_o,
    output wire [RX_GEAR-1:0] bd1_o,
    output wire [RX_GEAR-1:0] bd2_o,
    output wire [RX_GEAR-1:0] bd3_o,
    output wire               term_clk_en_o,      
    output wire               term_d0_en_o,       
    output wire               hs_d0_en_o,   	  
    output wire               term_d1_en_o,       
    output wire               hs_d1_en_o,         
    output wire               term_d2_en_o,       
    output wire               hs_d2_en_o,         
    output wire               term_d3_en_o,       
    output wire               hs_d3_en_o,         
    output wire               hs_sync_o,          
    output wire [1:0]         lp_hs_state_clk_o,  
    output wire [1:0]         lp_hs_state_d_o     
);
reg  pll_lock_meta, pll_lock_sync;
reg  ks97860, oubc301;
reg  lqe1808;
wire dbc042;
wire [NUM_RX_LANE*RX_GEAR-1:0] kf85aa, ho42d54;
wire       hd16aa2;
reg tjb5517;
reg xlaa8be;
reg cz545f7;
reg doa2fbd;
reg ux17deb;
reg sjbef5d;
reg [RX_GEAR - 1 : 0] ngbd764;
reg [RX_GEAR - 1 : 0] xw5d913;
reg [RX_GEAR - 1 : 0] dz644d6;
reg [RX_GEAR - 1 : 0] fp135be;
reg yz9adf6;
reg czd6fb5;
reg dob7dad;
reg yzbed6a;
reg pff6b54;
reg rvb5aa6;
reg jead537;
reg uv6a9bb;
reg en54ddd;
reg oua6eec;
reg fp37761;
reg sjbbb0f;
reg thdd87c;
reg ldec3e6;
reg ld61f37;
reg [NUM_RX_LANE * RX_GEAR - 1 : 0] xje6f83;
reg [NUM_RX_LANE * RX_GEAR - 1 : 0] uif07f5;
reg do83fa8;
reg [2047:0] vx37056;
wire [27:0] pub82b7;







localparam suc15ba = 28,ouadd0 = 32'hfdffc68b;
localparam [31:0] me56e80 = ouadd0;
localparam tjba00b = ouadd0 & 4'hf;
localparam [11:0] mt802fb = 'h7ff;
wire [(1 << tjba00b) -1:0] xybee2;
reg [suc15ba-1:0] hofb896;
reg [tjba00b-1:0] ene2595 [0:1];
reg [tjba00b-1:0] xy96565;
reg lsb2b2a;
integer kf95952;
integer ksaca94;

assign dbc042 = tjb5517 & term_clk_en_o;
generate
if (RX_CLK_MODE == "HS_ONLY") begin  assign term_clk_en_o = 1'b1;
end
else begin  assign term_clk_en_o = do83fa8;  mgb9cfe hd37b92 (      .reset_n_i      (xlaa8be),      .tu73f89          (cz545f7),      .wl9fc4a      (yz9adf6),      .lqfe255      (czd6fb5),      .rgf12ab      (hd16aa2),      .fc8955a        (),      .vv4aad2        (lp_hs_state_clk_o)  );
end
endgenerate
mgb9cfe zk578b8 (    .reset_n_i      (ld61f37),    .tu73f89          (clk_byte_fr_i),    .wl9fc4a      (dob7dad),    .lqfe255      (yzbed6a),    .rgf12ab      (term_d0_en_o),    .fc8955a        (hs_d0_en_o),    .vv4aad2        (lp_hs_state_d_o)
);
generate
if (NUM_RX_LANE > 1) begin
mgb9cfe pubbd4 (    .reset_n_i      (ld61f37),    .tu73f89          (clk_byte_fr_i),    .wl9fc4a      (pff6b54),    .lqfe255      (rvb5aa6),    .rgf12ab      (term_d1_en_o),    .fc8955a        (hs_d1_en_o),    .vv4aad2        ()
);
end
else begin  assign term_d1_en_o = 1'b0;  assign hs_d1_en_o   = 1'b0;
end
if (NUM_RX_LANE > 2) begin
mgb9cfe ou24068 (    .reset_n_i      (ld61f37),    .tu73f89          (clk_byte_fr_i),    .wl9fc4a      (jead537),    .lqfe255      (uv6a9bb),    .rgf12ab      (term_d2_en_o),    .fc8955a        (hs_d2_en_o),    .vv4aad2        ()
);
end
else begin  assign term_d2_en_o = 1'b0;  assign hs_d2_en_o   = 1'b0;
end
if (NUM_RX_LANE > 3) begin
mgb9cfe wwe5a02 (    .reset_n_i      (ld61f37),    .tu73f89          (clk_byte_fr_i),    .wl9fc4a      (en54ddd),    .lqfe255      (oua6eec),    .rgf12ab      (term_d3_en_o),    .fc8955a        (hs_d3_en_o),    .vv4aad2        ()
);
end
else begin  assign term_d3_en_o = 1'b0;  assign hs_d3_en_o   = 1'b0;
end
endgenerate
generate    if (NUM_RX_LANE == 1)      assign kf85aa = ngbd764[RX_GEAR-1:0];    else if (NUM_RX_LANE == 2) assign kf85aa = {xw5d913[RX_GEAR-1:0], ngbd764[RX_GEAR-1:0]};    else if (NUM_RX_LANE == 3) assign kf85aa = {dz644d6[RX_GEAR-1:0], xw5d913[RX_GEAR-1:0], ngbd764[RX_GEAR-1:0]};    else if (NUM_RX_LANE == 4) assign kf85aa = {fp135be[RX_GEAR-1:0], dz644d6[RX_GEAR-1:0], xw5d913[RX_GEAR-1:0], ngbd764[RX_GEAR-1:0]};
endgenerate

always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i)
begin    if (~reset_byte_fr_n_i)    begin        pll_lock_meta <= 0;        pll_lock_sync <= 0;    end    else    begin        pll_lock_meta <= sjbef5d;        pll_lock_sync <= pll_lock_meta;    end
end
always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i)
begin    if (~reset_byte_fr_n_i) begin        oubc301    <= 0;        ks97860 <= 0;    end    else begin        oubc301    <= hs_sync_o;        ks97860 <= thdd87c;    end
end
always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i)
begin    if (~reset_byte_fr_n_i)        lqe1808 <= 1;    else if (!thdd87c & sjbbb0f)        lqe1808 <= 1;    else        lqe1808 <= ~pll_lock_sync;


end
generate    if (RX_FIFO == "OFF")      begin : uiffc44        assign hs_sync_o = fp37761;        assign bd0_o = ngbd764;        assign bd1_o = (NUM_RX_LANE > 1) ? xw5d913 : 0;        assign bd2_o = (NUM_RX_LANE > 2) ? dz644d6 : 0;        assign bd3_o = (NUM_RX_LANE > 3) ? fp135be : 0;	end    else if (RX_FIFO == "ON")    begin : rv13115        ou988ae #(            .NUM_RX_LANE       (NUM_RX_LANE),            .RX_GEAR           (RX_GEAR)        )        ou988ae (            .an80e24   (ldec3e6),            .clk_byte_i        (ux17deb),            .clk_byte_fr_i     (clk_byte_fr_i),            .hs_sync_i         (fp37761),            .ne790b4              (xje6f83),            .hs_sync_o         (hs_sync_o),            .gdb4597              (ho42d54)        );        assign bd0_o = uif07f5[RX_GEAR-1:0];


        if (NUM_RX_LANE > 1)            assign bd1_o = uif07f5[RX_GEAR*2-1:RX_GEAR];        else            assign bd1_o = 0;        if (NUM_RX_LANE > 2)            assign bd2_o = uif07f5[RX_GEAR*3-1:RX_GEAR*2];        else            assign bd2_o = 0;        if (NUM_RX_LANE > 3)            assign bd3_o = uif07f5[RX_GEAR*4-1:RX_GEAR*3];        else            assign bd3_o = 0;    end
endgenerate

always@* begin tjb5517<=pub82b7[0];xlaa8be<=pub82b7[1];cz545f7<=pub82b7[2];doa2fbd<=pub82b7[3];ux17deb<=pub82b7[4];sjbef5d<=pub82b7[5];ngbd764<={bd0_i>>1,pub82b7[6]};xw5d913<={bd1_i>>1,pub82b7[7]};dz644d6<={bd2_i>>1,pub82b7[8]};fp135be<={bd3_i>>1,pub82b7[9]};yz9adf6<=pub82b7[10];czd6fb5<=pub82b7[11];dob7dad<=pub82b7[12];yzbed6a<=pub82b7[13];pff6b54<=pub82b7[14];rvb5aa6<=pub82b7[15];jead537<=pub82b7[16];uv6a9bb<=pub82b7[17];en54ddd<=pub82b7[18];oua6eec<=pub82b7[19];fp37761<=pub82b7[20];sjbbb0f<=pub82b7[21];thdd87c<=pub82b7[22];ldec3e6<=pub82b7[23];ld61f37<=pub82b7[24];xje6f83<={kf85aa>>1,pub82b7[25]};uif07f5<={ho42d54>>1,pub82b7[26]};do83fa8<=pub82b7[27];end
always@* begin vx37056[2047]<=reset_lp_n_i;vx37056[2046]<=clk_lp_ctrl_i;vx37056[2044]<=clk_byte_hs_i;vx37056[2040]<=clk_byte_i;vx37056[2032]<=pll_lock_i;vx37056[2017]<=bd0_i[0];vx37056[1987]<=bd1_i[0];vx37056[1926]<=bd2_i[0];vx37056[1921]<=lqe1808;vx37056[1805]<=bd3_i[0];vx37056[1795]<=dbc042;vx37056[1679]<=lp_d2_p_i;vx37056[1562]<=lp_clk_p_i;vx37056[1543]<=kf85aa[0];vx37056[1310]<=lp_d2_n_i;vx37056[1144]<=lp_d3_n_i;vx37056[1076]<=lp_clk_n_i;vx37056[1039]<=ho42d54[0];vx37056[1023]<=reset_n_i;vx37056[960]<=oubc301;vx37056[839]<=lp_d1_n_i;vx37056[572]<=lp_d3_p_i;vx37056[480]<=ks97860;vx37056[419]<=lp_d1_p_i;vx37056[240]<=hs_sync_i;vx37056[209]<=lp_d0_n_i;vx37056[104]<=lp_d0_p_i;vx37056[30]<=hd16aa2;end         assign xybee2 = vx37056,pub82b7 = hofb896; initial begin kf95952 = $fopen(".fred"); $fdisplay( kf95952, "%3h\n%3h", (me56e80 >> 4) & mt802fb, (me56e80 >> (tjba00b+4)) & mt802fb ); $fclose(kf95952); $readmemh(".fred", ene2595); end always @ (xybee2) begin xy96565 = ene2595[1]; for (ksaca94=0; ksaca94<suc15ba; ksaca94=ksaca94+1) begin hofb896[ksaca94] = xybee2[xy96565]; lsb2b2a = ^(xy96565 & ene2595[0]); xy96565 = {xy96565, lsb2b2a}; end end 
endmodule

















































`timescale 1 ns / 100 ps
module ou988ae #(
	parameter NUM_RX_LANE = 4,	parameter RX_GEAR = 16
)
(
    input  wire                          an80e24,
    input  wire                          clk_byte_i,
    input  wire                          hs_sync_i,
    input  wire [NUM_RX_LANE*RX_GEAR-1:0] ne790b4,

    input  wire                          clk_byte_fr_i,
    output wire                           hs_sync_o,
    output wire [NUM_RX_LANE*RX_GEAR-1:0] gdb4597
);
localparam  uv513bc = 8;
wire  ri89de5;
reg   qt4ef2b, cm7795c;
reg ux17deb;
reg fp37761;
reg [NUM_RX_LANE * RX_GEAR - 1 : 0] yke0249;
reg fc1249;
reg rv924a;
reg kq49256;
reg [2047:0] vx37056;
wire [5:0] pub82b7;


localparam suc15ba = 6,ouadd0 = 32'hfdffca8b;
localparam [31:0] me56e80 = ouadd0;
localparam tjba00b = ouadd0 & 4'hf;
localparam [11:0] mt802fb = 'h7ff;
wire [(1 << tjba00b) -1:0] xybee2;
reg [suc15ba-1:0] hofb896;
reg [tjba00b-1:0] ene2595 [0:1];
reg [tjba00b-1:0] xy96565;
reg lsb2b2a;
integer kf95952;
integer ksaca94;

assign  hs_sync_o = kq49256;

always @(posedge clk_byte_fr_i or posedge an80e24)
begin    if (an80e24)    begin        qt4ef2b <= 0;        cm7795c <= 0;    end    else    begin        qt4ef2b <= ~fc1249;        cm7795c <= rv924a;    end
end

pmi_fifo_dc #(    .pmi_data_width_w       (NUM_RX_LANE*RX_GEAR),    .pmi_data_width_r       (NUM_RX_LANE*RX_GEAR),    .pmi_data_depth_w       (uv513bc),    .pmi_data_depth_r       (uv513bc),    .pmi_full_flag          (uv513bc),    .pmi_empty_flag         (0),    .pmi_almost_full_flag   (uv513bc-1),    .pmi_almost_empty_flag  (1),    .pmi_regmode            ("reg"),    .pmi_resetmode          ("async"),    .pmi_family             ("LIFDB1"),    .module_type            ("pmi_fifo_dc"),    .pmi_implementation     ("EBR")
)
uid1fcc (    .Data         (ne790b4),    .WrClock      (clk_byte_i),    .RdClock      (clk_byte_fr_i),    .WrEn         (hs_sync_i),    .RdEn         (~ri89de5),    .Reset        (an80e24),    .RPReset      (1'b0),    .Q            (gdb4597),    .Empty        (ri89de5),    .Full         (),    .AlmostEmpty  (),    .AlmostFull   ()
);

always@* begin ux17deb<=pub82b7[0];fp37761<=pub82b7[1];yke0249<={ne790b4>>1,pub82b7[2]};fc1249<=pub82b7[3];rv924a<=pub82b7[4];kq49256<=pub82b7[5];end
always@* begin vx37056[2047]<=hs_sync_i;vx37056[2046]<=ne790b4[0];vx37056[2044]<=ri89de5;vx37056[2040]<=qt4ef2b;vx37056[2032]<=cm7795c;vx37056[1023]<=clk_byte_i;end         assign xybee2 = vx37056,pub82b7 = hofb896; initial begin kf95952 = $fopen(".fred"); $fdisplay( kf95952, "%3h\n%3h", (me56e80 >> 4) & mt802fb, (me56e80 >> (tjba00b+4)) & mt802fb ); $fclose(kf95952); $readmemh(".fred", ene2595); end always @ (xybee2) begin xy96565 = ene2595[1]; for (ksaca94=0; ksaca94<suc15ba; ksaca94=ksaca94+1) begin hofb896[ksaca94] = xybee2[xy96565]; lsb2b2a = ^(xy96565 & ene2595[0]); xy96565 = {xy96565, lsb2b2a}; end end 
endmodule

